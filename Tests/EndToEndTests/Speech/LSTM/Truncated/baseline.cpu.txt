CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 12
    Total Memory: 264106564 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/LSTM/Truncated/../cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/LSTM/Truncated/.. OutputDir=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu DeviceId=-1 timestamping=true speechTrain=[SGD=[momentumAsTimeConstant=0:6074.9]] modelSelector=0
CNTK 2.1+ (HEAD 572609, Aug 21 2017 08:22:49) on b1dbe8a98f46 at 2017/08/21 08:55:57

/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/LSTM/Truncated/../cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/LSTM/Truncated/..  OutputDir=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu  DeviceId=-1  timestamping=true  speechTrain=[SGD=[momentumAsTimeConstant=0:6074.9]]  modelSelector=0
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data
08/21/2017 08:55:57: -------------------------------------------------------------------
08/21/2017 08:55:57: Build info: 

08/21/2017 08:55:57: 		Built time: Aug 21 2017 08:20:29
08/21/2017 08:55:57: 		Last modified date: Thu Aug  3 09:47:36 2017
08/21/2017 08:55:57: 		Build type: release
08/21/2017 08:55:57: 		Build target: GPU
08/21/2017 08:55:57: 		With 1bit-SGD: no
08/21/2017 08:55:57: 		With ASGD: yes
08/21/2017 08:55:57: 		Math lib: mkl
08/21/2017 08:55:57: 		CUDA_PATH: /usr/local/cuda-8.0
08/21/2017 08:55:57: 		CUB_PATH: /usr/local/cub-1.4.1
08/21/2017 08:55:57: 		CUDNN_PATH: /usr/local/cudnn-6.0
08/21/2017 08:55:57: 		Build Branch: HEAD
08/21/2017 08:55:57: 		Build SHA1: 57260963c605c12d3796e37783433518ab8ba039
08/21/2017 08:55:57: 		Built by Source/CNTK/buildinfo.h$$0 on 516c40771854
08/21/2017 08:55:57: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/21/2017 08:55:57: 		MPI distribution: Open MPI
08/21/2017 08:55:57: 		MPI version: 1.10.7
08/21/2017 08:55:57: -------------------------------------------------------------------
08/21/2017 08:55:57: -------------------------------------------------------------------
08/21/2017 08:55:57: GPU info:

08/21/2017 08:55:57: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; total memory = 3020 MB; free memory = 3018 MB
08/21/2017 08:55:57: -------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: cntk.cntk:// Note: These options are overridden from the command line in some test cases.=true
configparameters: cntk.cntk:command=speechCreate:speechTrain
configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/LSTM/Truncated/..
configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data
configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data
configparameters: cntk.cntk:deviceId=-1
configparameters: cntk.cntk:frameMode=false
configparameters: cntk.cntk:modelPath=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn
configparameters: cntk.cntk:modelSelector=0
configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu
configparameters: cntk.cntk:parallelTrain=false
configparameters: cntk.cntk:precision=float
configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu
configparameters: cntk.cntk:speechCreate={
    action = "edit"
    outputModelPath = "/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.initial"
    BrainScriptNetworkBuilder = {
        useLayerNorm = true
        // dimensions (needed for both model and readers)
        baseFeatDim = 33
        featDim = 11 * baseFeatDim
        labelDim = 132
        // hidden dimensions
        innerCellDim  = 1024
        hiddenDim     = 256
        numLSTMLayers = 3        // number of hidden LSTM model layers
        modelUsingCuDNN5 = Sequential
        (
            MeanVarNorm :
            (_ => OptimizedRNNStack(ParameterTensor {0:0, initOutputRank=-1, init='heNormal', initValueScale=1/10}, _, hiddenDim, numLayers=numLSTMLayers, bidirectional=true)) :
            DenseLayer {labelDim, init='heUniform', initValueScale=1/3}
        )
        modelUsingLayersLikeCuDNN5 = Sequential
        (
            MeanVarNorm :
            LayerStack {numLSTMLayers, _ => Sequential (
                (x => Splice (
                    RecurrentLSTMLayer {hiddenDim, init='heUniform', initValueScale=1/10} (x) :
                    RecurrentLSTMLayer {hiddenDim, goBackwards=true, init='heUniform', initValueScale=1/10} (x)
                ))
            )} :
            DenseLayer {labelDim, init='heUniform', initValueScale=1/3}
        )
        modelUsingLayers = Sequential
        (
            MeanVarNorm :
            LayerStack {numLSTMLayers, _ => Sequential (
                if useLayerNorm then LayerNormalizationLayer{} else Identity :
                RecurrentLSTMLayer {hiddenDim, cellShape=innerCellDim, init='heUniform', initValueScale=1/3}
            )} :
            DenseLayer {labelDim, init='heUniform', initValueScale=1/3}
        )
        modelRegressionTest (features) =
        {
            useSelfStabilization = true
            featNorm = MeanVarNorm(features)
            // we define the LSTM locally for now, since the one in CNTK.core.bs has a slightly changed configuration that breaks this test
            Stabilize (x, enabled=true) =
                if enabled
                then {
beta = Exp (BS.Parameters.BiasParam ((1))) 
                    result = beta .* x
                }.result
                else x
            LSTMP (outputDim, cellDim=outputDim, x, inputDim=x.dim, prevState, enableSelfStabilization=false) =
            {
                _privateInnards = {       // encapsulate the inner workings
                    dh = prevState.h // previous values
                    dc = prevState.c
                    // parameter macros--these carry their own weight matrices
                    B() = BS.Parameters.BiasParam (cellDim)
                    W(v) = BS.Parameters.WeightParam (cellDim, Inferred)  * Stabilize (v, enabled=enableSelfStabilization) // input-to-hidden
                    H(h) = BS.Parameters.WeightParam (cellDim, outputDim) * Stabilize (h, enabled=enableSelfStabilization) // hidden-to-hidden
                    C(c) = BS.Parameters.DiagWeightParam (cellDim)       .* Stabilize (c, enabled=enableSelfStabilization) // cell-to-hiddden (note: applied elementwise)
                    // note: the W(x) here are all different, they all come with their own set of weights; same for H(dh), C(dc), and B()
                    it = Sigmoid (W(x) + B() + H(dh) + C(dc))          // input gate(t)
                    bit = it .* Tanh (W(x) + (H(dh) + B()))            // applied to tanh of input network
                    ft = Sigmoid (W(x) + B() + H(dh) + C(dc))          // forget-me-not gate(t)
                    bft = ft .* dc                                     // applied to cell(t-1)
                    ct = bft + bit                                     // c(t) is sum of both
                    ot = Sigmoid (W(x) + B() + H(dh) + C(ct))          // output gate(t)
                    ht = ot .* Tanh (ct)                               // applied to tanh(cell(t))
                }
                c = _privateInnards.ct          // cell value
                h = if outputDim != cellDim     // output/hidden state
                    then {                      // project
                        Wmr = BS.Parameters.WeightParam (outputDim, cellDim);
                        htp = Wmr * Stabilize (_privateInnards.ht, enabled=enableSelfStabilization)
                    }.htp         // TODO: ^^ extend BS syntax to allow to say: then { Wmr = WeightParam(outputDim, cellDim) } in Wmr * Stabilize (...)
                    else _privateInnards.ht     // no projection
                dim = outputDim
            }
            RecurrentLSTMP (outputDim, cellDim=outputDim.dim, x, inputDim=x.dim, previousHook=BS.RNNs.PreviousHC, enableSelfStabilization=false) =
            {
                prevState = previousHook (lstmState)
                inputDim1 = inputDim ; cellDim1 = cellDim ; enableSelfStabilization1 = enableSelfStabilization
                lstmState = LSTMP (outputDim, cellDim=cellDim1, x, inputDim=inputDim1, prevState, enableSelfStabilization=enableSelfStabilization1)
            }.lstmState // we return the state record (h,c)
            // define the stack of hidden LSTM layers  --TODO: change to RecurrentLSTMPStack(), change stabilizer config
            S(x) = Stabilize (x, enabled=useSelfStabilization)
            LSTMoutput[k:1..numLSTMLayers] =
                if k == 1
                then /*BS.RNNs.*/ RecurrentLSTMP (hiddenDim, cellDim=innerCellDim, /*S*/ (featNorm),        inputDim=baseFeatDim, enableSelfStabilization=useSelfStabilization).h
                else /*BS.RNNs.*/ RecurrentLSTMP (hiddenDim, cellDim=innerCellDim, /*S*/ (LSTMoutput[k-1]), inputDim=hiddenDim,   enableSelfStabilization=useSelfStabilization).h
            // and add a softmax layer on top
            W = BS.Parameters.WeightParam (labelDim, Inferred)
            B = BS.Parameters.BiasParam   (labelDim)
            // (unnecessarily using explicit Times with inferInputRankToMap in order to have a test for inferInputRankToMap parameter)
            z = Times (W, S(LSTMoutput[numLSTMLayers]), inferInputRankToMap=0) + B; // top-level input to Softmax
        }.z
        // features
        features = Input((1 : featDim),  tag='feature') // TEST: Artificially reading data transposed
        realFeatures = FlattenDimensions (Transpose (features), 1, 2)             //       and swapping them back to (featDim:1), for testing Transpose()
feashift = RowSlice(featDim - baseFeatDim, baseFeatDim, realFeatures);  
        labels   = Input(labelDim, tag='label')
        // link model to inputs
models = [| modelRegressionTest; modelUsingLayers; modelUsingCuDNN5; modelUsingLayersLikeCuDNN5 |]  
model = models[0]     
        z = model (feashift)
        // link model to training
        ce  = /*Pass*/ SumElements (ReduceLogSum (z) - TransposeTimes (labels,          z),  tag='criterion')  // manually-defined per-sample objective
        err = /*Pass*/ SumElements (BS.Constants.One - TransposeTimes (labels, Hardmax (z)), tag='evaluation') // also track frame errors
        // decoding
        logPrior = LogPrior(labels)	 
        scaledLogLikelihood = Pass (z - logPrior, tag='output') // using Pass() since we can't assign a tag to x - y
        featureNodes = (features)
        labelNodes = (labels)
        criterionNodes = (ce)
        evaluationNodes = (err)
        outputNodes = (scaledLogLikelihood)
    }
}

configparameters: cntk.cntk:speechTrain={
    action = "train"
    BrainScriptNetworkBuilder = (BS.Network.Load("/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.initial"))
    SGD = {
        epochSize = 20480 ; maxEpochs = 4 ; minibatchSize = 20
        learningRatesPerMB = 0.5 ; momentumAsTimeConstant = 2500
        numMBsToShowResult = 10
        keepCheckPointFiles = true       
    }
    reader = {
        readerType = "HTKMLFReader"
        randomize = "auto" ; readMethod = "blockRandomize"
        nbruttsineachrecurrentiter = 32
        miniBatchMode = "partial" ; verbosity = 0 ; useMersenneTwisterRand = true
        features = { dim =      363 ; type      = "real"     ; scpFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data/glob_0000.scp" ; }
        labels   = { labelDim = 132 ; labelType = "category" ; mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data/glob_0000.mlf" ; labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data/state.list" }
    }
} [SGD=[momentumAsTimeConstant=0:6074.9]]

configparameters: cntk.cntk:timestamping=true
configparameters: cntk.cntk:traceLevel=1
configparameters: cntk.cntk:truncated=true
08/21/2017 08:55:57: Commands: speechCreate speechTrain
08/21/2017 08:55:57: precision = "float"

08/21/2017 08:55:57: ##############################################################################
08/21/2017 08:55:57: #                                                                            #
08/21/2017 08:55:57: # speechCreate command (edit action)                                         #
08/21/2017 08:55:57: #                                                                            #
08/21/2017 08:55:57: ##############################################################################

Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[132 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[1024 x 0] as uniform later when dimensions are fully known.

Post-processing network...

6 roots:
	ce = SumElements()
	err = SumElements()
	logPrior._ = Mean()
	scaledLogLikelihood = Pass()
	z.featNorm.invStdDev = InvStdDev()
	z.featNorm.mean = Mean()

Loop[0] --> Loop_z.LSTMoutput[1].lstmState.h.htp -> 35 nodes

	z.LSTMoutput[1].prevState.h	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0]	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0]	z.LSTMoutput[1].prevState.c	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result
	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.ft._	z.LSTMoutput[1].lstmState._privateInnards.ft
	z.LSTMoutput[1].lstmState._privateInnards.bft	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0]	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.it._	z.LSTMoutput[1].lstmState._privateInnards.it	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result
	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0]	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z
	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.bit	z.LSTMoutput[1].lstmState._privateInnards.ct
	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.ot._
	z.LSTMoutput[1].lstmState._privateInnards.ot	z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.ht
	z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result	z.LSTMoutput[1].lstmState.h.htp

Loop[1] --> Loop_z.LSTMoutput[2].lstmState.h.htp -> 35 nodes

	z.LSTMoutput[2].prevState.h	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0]	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0]	z.LSTMoutput[2].prevState.c	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result
	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.ft._	z.LSTMoutput[2].lstmState._privateInnards.ft
	z.LSTMoutput[2].lstmState._privateInnards.bft	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0]	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.it._	z.LSTMoutput[2].lstmState._privateInnards.it	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result
	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0]	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z
	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.bit	z.LSTMoutput[2].lstmState._privateInnards.ct
	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.ot._
	z.LSTMoutput[2].lstmState._privateInnards.ot	z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.ht
	z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result	z.LSTMoutput[2].lstmState.h.htp

Loop[2] --> Loop_z.LSTMoutput[3].lstmState.h.htp -> 35 nodes

	z.LSTMoutput[3].prevState.h	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0]	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0]	z.LSTMoutput[3].prevState.c	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result
	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.ft._	z.LSTMoutput[3].lstmState._privateInnards.ft
	z.LSTMoutput[3].lstmState._privateInnards.bft	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0]	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.it._	z.LSTMoutput[3].lstmState._privateInnards.it	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result
	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0]	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z
	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.bit	z.LSTMoutput[3].lstmState._privateInnards.ct
	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.ot._
	z.LSTMoutput[3].lstmState._privateInnards.ot	z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.ht
	z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result	z.LSTMoutput[3].lstmState.h.htp

Validating network. 287 nodes to process in pass 1.

Validating --> z.W = LearnableParameter() :  -> [132 x 0]
Validating --> z.z.PlusArgs[0].y.beta._ = LearnableParameter() :  -> [1]
Validating --> z.z.PlusArgs[0].y.beta = Exp (z.z.PlusArgs[0].y.beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState.h.Wmr = LearnableParameter() :  -> [256 x 1024]
Validating --> z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState.h.Wmr = LearnableParameter() :  -> [256 x 1024]
Validating --> z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState.h.Wmr = LearnableParameter() :  -> [256 x 1024]
Validating --> z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> features = InputValue() :  -> [1 x 363 x *]
Validating --> realFeatures.x = TransposeDimensions (features) : [1 x 363 x *] -> [363 x 1 x *]
Validating --> realFeatures = Reshape (realFeatures.x) : [363 x 1 x *] -> [363 x *]
Validating --> feashift = Slice (realFeatures) : [363 x *] -> [33 x *]
Validating --> z.featNorm.mean = Mean (feashift) : [33 x *] -> [33]
Validating --> z.featNorm.ElementTimesArgs[0] = Minus (feashift, z.featNorm.mean) : [33 x *], [33] -> [33 x *]
Validating --> z.featNorm.invStdDev = InvStdDev (feashift) : [33 x *] -> [33]
Validating --> z.featNorm = ElementTimes (z.featNorm.ElementTimesArgs[0], z.featNorm.invStdDev) : [33 x *], [33] -> [33 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *] -> [33 x *]
Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 33].
Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 33] <- uniform(seed=1, init dims=[1024 x 33], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *] -> [33 x *]
Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 33].
Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 33] <- uniform(seed=1, init dims=[1024 x 33], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *] -> [33 x *]
Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 33].
Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 33] <- uniform(seed=1, init dims=[1024 x 33], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *] -> [33 x *]
Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 33].
Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 33] <- uniform(seed=1, init dims=[1024 x 33], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [0] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._ = Plus (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft = Sigmoid (z.LSTMoutput[1].lstmState._privateInnards.ft._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bft = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft, z.LSTMoutput[1].prevState.c) : [1024 x *], [0] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [0] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._ = Plus (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it = Sigmoid (z.LSTMoutput[1].lstmState._privateInnards.it._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z = Plus (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1] = Tanh (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it, z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ct = Plus (z.LSTMoutput[1].lstmState._privateInnards.bft, z.LSTMoutput[1].lstmState._privateInnards.bit) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].lstmState._privateInnards.ct) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._ = Plus (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot = Sigmoid (z.LSTMoutput[1].lstmState._privateInnards.ot._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1] = Tanh (z.LSTMoutput[1].lstmState._privateInnards.ct) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ht = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot, z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta, z.LSTMoutput[1].lstmState._privateInnards.ht) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState.h.htp = Times (z.LSTMoutput[1].lstmState.h.Wmr, z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result) : [256 x 1024], [1024 x *] -> [256 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [0] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._ = Plus (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft = Sigmoid (z.LSTMoutput[2].lstmState._privateInnards.ft._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bft = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft, z.LSTMoutput[2].prevState.c) : [1024 x *], [0] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [0] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._ = Plus (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it = Sigmoid (z.LSTMoutput[2].lstmState._privateInnards.it._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z = Plus (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1] = Tanh (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it, z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ct = Plus (z.LSTMoutput[2].lstmState._privateInnards.bft, z.LSTMoutput[2].lstmState._privateInnards.bit) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].lstmState._privateInnards.ct) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._ = Plus (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot = Sigmoid (z.LSTMoutput[2].lstmState._privateInnards.ot._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1] = Tanh (z.LSTMoutput[2].lstmState._privateInnards.ct) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ht = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot, z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta, z.LSTMoutput[2].lstmState._privateInnards.ht) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState.h.htp = Times (z.LSTMoutput[2].lstmState.h.Wmr, z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result) : [256 x 1024], [1024 x *] -> [256 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 0]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) operation: Tensor shape was inferred as [1024 x 256].
Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation): Initializing Parameter[1024 x 256] <- uniform(seed=1, init dims=[1024 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [0] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._ = Plus (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft = Sigmoid (z.LSTMoutput[3].lstmState._privateInnards.ft._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bft = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft, z.LSTMoutput[3].prevState.c) : [1024 x *], [0] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [0] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._ = Plus (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it = Sigmoid (z.LSTMoutput[3].lstmState._privateInnards.it._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [0] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [1] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z = Plus (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1] = Tanh (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it, z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ct = Plus (z.LSTMoutput[3].lstmState._privateInnards.bft, z.LSTMoutput[3].lstmState._privateInnards.bit) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].lstmState._privateInnards.ct) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._ = Plus (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot = Sigmoid (z.LSTMoutput[3].lstmState._privateInnards.ot._) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1] = Tanh (z.LSTMoutput[3].lstmState._privateInnards.ct) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ht = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot, z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1]) : [1024 x *], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta, z.LSTMoutput[3].lstmState._privateInnards.ht) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState.h.htp = Times (z.LSTMoutput[3].lstmState.h.Wmr, z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result) : [256 x 1024], [1024 x *] -> [256 x *]
Validating --> z.z.PlusArgs[0].y.result = ElementTimes (z.z.PlusArgs[0].y.beta, z.LSTMoutput[3].lstmState.h.htp) : [1], [256 x *] -> [256 x *]
Node 'z.W' (LearnableParameter operation) operation: Tensor shape was inferred as [132 x 256].
Node 'z.W' (LearnableParameter operation): Initializing Parameter[132 x 256] <- uniform(seed=1, init dims=[132 x 256], range=0.050000(0.050000*1.000000), onCPU=true.
)Validating --> z.z.PlusArgs[0] = Times (z.W, z.z.PlusArgs[0].y.result) : [132 x 256], [256 x *] -> [132 x *]
Validating --> z.B = LearnableParameter() :  -> [132]
Validating --> z = Plus (z.z.PlusArgs[0], z.B) : [132 x *], [132] -> [132 x *]
Validating --> ce.matrix.MinusArgs[0].r = ReduceElements (z) : [132 x *] -> [1 x *]
Validating --> labels = InputValue() :  -> [132 x *]
Validating --> ce.matrix.MinusArgs[1] = TransposeTimes (labels, z) : [132 x *], [132 x *] -> [1 x *]
Validating --> ce.matrix = Minus (ce.matrix.MinusArgs[0].r, ce.matrix.MinusArgs[1]) : [1 x *], [1 x *] -> [1 x *]
Validating --> ce = SumElements (ce.matrix) : [1 x *] -> [1]
Validating --> BS.Constants.One = LearnableParameter() :  -> [1]
Validating --> err.matrix.MinusArgs[1].rightMatrix = Hardmax (z) : [132 x *] -> [132 x *]
Validating --> err.matrix.MinusArgs[1] = TransposeTimes (labels, err.matrix.MinusArgs[1].rightMatrix) : [132 x *], [132 x *] -> [1 x *]
Validating --> err.matrix = Minus (BS.Constants.One, err.matrix.MinusArgs[1]) : [1], [1 x *] -> [1 x *]
Validating --> err = SumElements (err.matrix) : [1 x *] -> [1]
Validating --> logPrior._ = Mean (labels) : [132 x *] -> [132]
Validating --> logPrior = Log (logPrior._) : [132] -> [132]
Validating --> scaledLogLikelihood._ = Minus (z, logPrior) : [132 x *], [132] -> [132 x *]
Validating --> scaledLogLikelihood = Pass (scaledLogLikelihood._) : [132 x *] -> [132 x *]

Validating network. 197 nodes to process in pass 2.

Validating --> z.LSTMoutput[1].prevState.h = PastValue (z.LSTMoutput[1].lstmState.h.htp) : [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].prevState.c = PastValue (z.LSTMoutput[1].lstmState._privateInnards.ct) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[2].prevState.h = PastValue (z.LSTMoutput[2].lstmState.h.htp) : [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].prevState.c = PastValue (z.LSTMoutput[2].lstmState._privateInnards.ct) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]
Validating --> z.LSTMoutput[3].prevState.h = PastValue (z.LSTMoutput[3].lstmState.h.htp) : [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].prevState.c = PastValue (z.LSTMoutput[3].lstmState._privateInnards.ct) : [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *] -> [256 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *] -> [1024 x *]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024 x *], [1024] -> [1024 x *]

Validating network. 45 nodes to process in pass 3.


Validating network, final pass.




Post-processing network complete.

08/21/2017 08:55:58: 
Model with 287 nodes saved as '/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.initial'.

08/21/2017 08:55:58: Action "edit" complete.


08/21/2017 08:55:58: ##############################################################################
08/21/2017 08:55:58: #                                                                            #
08/21/2017 08:55:58: # speechTrain command (train action)                                         #
08/21/2017 08:55:58: #                                                                            #
08/21/2017 08:55:58: ##############################################################################

parallelTrain option is not enabled. ParallelTrain config will be ignored.
08/21/2017 08:55:58: 
Creating virgin network.
Load: Loading model file: /tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.initial
Post-processing network...

6 roots:
	ce = SumElements()
	err = SumElements()
	logPrior._ = Mean()
	scaledLogLikelihood = Pass()
	z.featNorm.invStdDev = InvStdDev()
	z.featNorm.mean = Mean()

Loop[0] --> Loop_z.LSTMoutput[1].lstmState.h.htp -> 35 nodes

	z.LSTMoutput[1].prevState.h	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0]	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0]	z.LSTMoutput[1].prevState.c	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result
	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.ft._	z.LSTMoutput[1].lstmState._privateInnards.ft
	z.LSTMoutput[1].lstmState._privateInnards.bft	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0]	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1]
	z.LSTMoutput[1].lstmState._privateInnards.it._	z.LSTMoutput[1].lstmState._privateInnards.it	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result
	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0]	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z
	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.bit	z.LSTMoutput[1].lstmState._privateInnards.ct
	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.ot._
	z.LSTMoutput[1].lstmState._privateInnards.ot	z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1]	z.LSTMoutput[1].lstmState._privateInnards.ht
	z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result	z.LSTMoutput[1].lstmState.h.htp

Loop[1] --> Loop_z.LSTMoutput[2].lstmState.h.htp -> 35 nodes

	z.LSTMoutput[2].prevState.h	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0]	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0]	z.LSTMoutput[2].prevState.c	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result
	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.ft._	z.LSTMoutput[2].lstmState._privateInnards.ft
	z.LSTMoutput[2].lstmState._privateInnards.bft	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0]	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1]
	z.LSTMoutput[2].lstmState._privateInnards.it._	z.LSTMoutput[2].lstmState._privateInnards.it	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result
	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0]	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z
	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.bit	z.LSTMoutput[2].lstmState._privateInnards.ct
	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.ot._
	z.LSTMoutput[2].lstmState._privateInnards.ot	z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1]	z.LSTMoutput[2].lstmState._privateInnards.ht
	z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result	z.LSTMoutput[2].lstmState.h.htp

Loop[2] --> Loop_z.LSTMoutput[3].lstmState.h.htp -> 35 nodes

	z.LSTMoutput[3].prevState.h	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0]	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0]	z.LSTMoutput[3].prevState.c	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result
	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.ft._	z.LSTMoutput[3].lstmState._privateInnards.ft
	z.LSTMoutput[3].lstmState._privateInnards.bft	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0]	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1]
	z.LSTMoutput[3].lstmState._privateInnards.it._	z.LSTMoutput[3].lstmState._privateInnards.it	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result
	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0]	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z
	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.bit	z.LSTMoutput[3].lstmState._privateInnards.ct
	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.ot._
	z.LSTMoutput[3].lstmState._privateInnards.ot	z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1]	z.LSTMoutput[3].lstmState._privateInnards.ht
	z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result	z.LSTMoutput[3].lstmState.h.htp

Validating network. 287 nodes to process in pass 1.

Validating --> z.W = LearnableParameter() :  -> [132 x 256]
Validating --> z.z.PlusArgs[0].y.beta._ = LearnableParameter() :  -> [1]
Validating --> z.z.PlusArgs[0].y.beta = Exp (z.z.PlusArgs[0].y.beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState.h.Wmr = LearnableParameter() :  -> [256 x 1024]
Validating --> z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState.h.Wmr = LearnableParameter() :  -> [256 x 1024]
Validating --> z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState.h.Wmr = LearnableParameter() :  -> [256 x 1024]
Validating --> z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 33]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> features = InputValue() :  -> [1 x 363 x *1]
Validating --> realFeatures.x = TransposeDimensions (features) : [1 x 363 x *1] -> [363 x 1 x *1]
Validating --> realFeatures = Reshape (realFeatures.x) : [363 x 1 x *1] -> [363 x *1]
Validating --> feashift = Slice (realFeatures) : [363 x *1] -> [33 x *1]
Validating --> z.featNorm.mean = Mean (feashift) : [33 x *1] -> [33]
Validating --> z.featNorm.ElementTimesArgs[0] = Minus (feashift, z.featNorm.mean) : [33 x *1], [33] -> [33 x *1]
Validating --> z.featNorm.invStdDev = InvStdDev (feashift) : [33 x *1] -> [33]
Validating --> z.featNorm = ElementTimes (z.featNorm.ElementTimesArgs[0], z.featNorm.invStdDev) : [33 x *1], [33] -> [33 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *1] -> [33 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 33]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *1] -> [33 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 33]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *1] -> [33 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 33]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta, z.featNorm) : [1], [33 x *1] -> [33 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result) : [1024 x 33], [33 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [1024] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._ = Plus (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft = Sigmoid (z.LSTMoutput[1].lstmState._privateInnards.ft._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bft = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft, z.LSTMoutput[1].prevState.c) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0] = Plus (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [1024] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._ = Plus (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it = Sigmoid (z.LSTMoutput[1].lstmState._privateInnards.it._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z = Plus (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1] = Tanh (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it, z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ct = Plus (z.LSTMoutput[1].lstmState._privateInnards.bft, z.LSTMoutput[1].lstmState._privateInnards.bit) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].lstmState._privateInnards.ct) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._ = Plus (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot = Sigmoid (z.LSTMoutput[1].lstmState._privateInnards.ot._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1] = Tanh (z.LSTMoutput[1].lstmState._privateInnards.ct) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ht = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot, z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta, z.LSTMoutput[1].lstmState._privateInnards.ht) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState.h.htp = Times (z.LSTMoutput[1].lstmState.h.Wmr, z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result) : [256 x 1024], [1024 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [1024] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._ = Plus (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft = Sigmoid (z.LSTMoutput[2].lstmState._privateInnards.ft._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bft = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft, z.LSTMoutput[2].prevState.c) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0] = Plus (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [1024] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._ = Plus (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it = Sigmoid (z.LSTMoutput[2].lstmState._privateInnards.it._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z = Plus (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1] = Tanh (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it, z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ct = Plus (z.LSTMoutput[2].lstmState._privateInnards.bft, z.LSTMoutput[2].lstmState._privateInnards.bit) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].lstmState._privateInnards.ct) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._ = Plus (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot = Sigmoid (z.LSTMoutput[2].lstmState._privateInnards.ot._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1] = Tanh (z.LSTMoutput[2].lstmState._privateInnards.ct) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ht = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot, z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta, z.LSTMoutput[2].lstmState._privateInnards.ht) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState.h.htp = Times (z.LSTMoutput[2].lstmState.h.Wmr, z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result) : [256 x 1024], [1024 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] = LearnableParameter() :  -> [1024 x 256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ = LearnableParameter() :  -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta = Exp (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._) : [1] -> [1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] = LearnableParameter() :  -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [1024] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._ = Plus (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft = Sigmoid (z.LSTMoutput[3].lstmState._privateInnards.ft._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bft = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft, z.LSTMoutput[3].prevState.c) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0] = Plus (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [1024] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._ = Plus (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it = Sigmoid (z.LSTMoutput[3].lstmState._privateInnards.it._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256] -> [256]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024], [1024] -> [1024]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z = Plus (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1] = Tanh (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it, z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ct = Plus (z.LSTMoutput[3].lstmState._privateInnards.bft, z.LSTMoutput[3].lstmState._privateInnards.bit) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].lstmState._privateInnards.ct) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._ = Plus (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot = Sigmoid (z.LSTMoutput[3].lstmState._privateInnards.ot._) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1] = Tanh (z.LSTMoutput[3].lstmState._privateInnards.ct) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ht = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot, z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1]) : [1024 x *1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta, z.LSTMoutput[3].lstmState._privateInnards.ht) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState.h.htp = Times (z.LSTMoutput[3].lstmState.h.Wmr, z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result) : [256 x 1024], [1024 x *1] -> [256 x *1]
Validating --> z.z.PlusArgs[0].y.result = ElementTimes (z.z.PlusArgs[0].y.beta, z.LSTMoutput[3].lstmState.h.htp) : [1], [256 x *1] -> [256 x *1]
Validating --> z.z.PlusArgs[0] = Times (z.W, z.z.PlusArgs[0].y.result) : [132 x 256], [256 x *1] -> [132 x *1]
Validating --> z.B = LearnableParameter() :  -> [132]
Validating --> z = Plus (z.z.PlusArgs[0], z.B) : [132 x *1], [132] -> [132 x *1]
Validating --> ce.matrix.MinusArgs[0].r = ReduceElements (z) : [132 x *1] -> [1 x *1]
Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> ce.matrix.MinusArgs[1] = TransposeTimes (labels, z) : [132 x *1], [132 x *1] -> [1 x *1]
Validating --> ce.matrix = Minus (ce.matrix.MinusArgs[0].r, ce.matrix.MinusArgs[1]) : [1 x *1], [1 x *1] -> [1 x *1]
Validating --> ce = SumElements (ce.matrix) : [1 x *1] -> [1]
Validating --> BS.Constants.One = LearnableParameter() :  -> [1]
Validating --> err.matrix.MinusArgs[1].rightMatrix = Hardmax (z) : [132 x *1] -> [132 x *1]
Validating --> err.matrix.MinusArgs[1] = TransposeTimes (labels, err.matrix.MinusArgs[1].rightMatrix) : [132 x *1], [132 x *1] -> [1 x *1]
Validating --> err.matrix = Minus (BS.Constants.One, err.matrix.MinusArgs[1]) : [1], [1 x *1] -> [1 x *1]
Validating --> err = SumElements (err.matrix) : [1 x *1] -> [1]
Validating --> logPrior._ = Mean (labels) : [132 x *1] -> [132]
Validating --> logPrior = Log (logPrior._) : [132] -> [132]
Validating --> scaledLogLikelihood._ = Minus (z, logPrior) : [132 x *1], [132] -> [132 x *1]
Validating --> scaledLogLikelihood = Pass (scaledLogLikelihood._) : [132 x *1] -> [132 x *1]

Validating network. 197 nodes to process in pass 2.

Validating --> z.LSTMoutput[1].prevState.h = PastValue (z.LSTMoutput[1].lstmState.h.htp) : [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].prevState.c = PastValue (z.LSTMoutput[1].lstmState._privateInnards.ct) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[1].prevState.c) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[1].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[2].prevState.h = PastValue (z.LSTMoutput[2].lstmState.h.htp) : [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].prevState.c = PastValue (z.LSTMoutput[2].lstmState._privateInnards.ct) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[2].prevState.c) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[2].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]
Validating --> z.LSTMoutput[3].prevState.h = PastValue (z.LSTMoutput[3].lstmState.h.htp) : [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].prevState.c = PastValue (z.LSTMoutput[3].lstmState._privateInnards.ct) : [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] = Times (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta, z.LSTMoutput[3].prevState.c) : [1], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1] = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result) : [1024], [1024 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result = ElementTimes (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta, z.LSTMoutput[3].prevState.h) : [1], [256 x *1] -> [256 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] = Times (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result) : [1024 x 256], [256 x *1] -> [1024 x *1]
Validating --> z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] = Plus (z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0], z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]) : [1024 x *1], [1024] -> [1024 x *1]

Validating network. 45 nodes to process in pass 3.


Validating network, final pass.




Post-processing network complete.

reading script file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data/glob_0000.scp ... 948 entries
total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data/state.list
htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1_2/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
label set 0: 129 classes
minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
08/21/2017 08:55:58: 
Model has 287 nodes. Using CPU.

08/21/2017 08:55:58: Training criterion:   ce = SumElements
08/21/2017 08:55:58: Evaluation criterion: err = SumElements


Allocating matrices for forward and/or backward propagation.

Gradient Memory Aliasing: 39 are aliased.
	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0] (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0] (gradient)
	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0] (gradient)
	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0] (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0] (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0] (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0] (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0] (gradient)
	z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0] (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0] (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0] (gradient)
	realFeatures.x (gradient) reuses realFeatures (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0] (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0] (gradient)
	z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0] (gradient)
	z.z.PlusArgs[0] (gradient) reuses z (gradient)
	z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0] (gradient)
	z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0] (gradient)
	z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0] (gradient)
	ce.matrix.MinusArgs[0].r (gradient) reuses ce.matrix (gradient)
	z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] (gradient) reuses z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0] (gradient)

Memory Sharing: Out of 556 matrices, 373 are shared as 91, and 183 are not shared.

Here are the ones that share memory:
	{ scaledLogLikelihood : [132 x *1]
	  scaledLogLikelihood._ : [132 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[3].prevState.c : [1024 x *1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState.h.htp : [256 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState.h.Wmr : [256 x 1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result : [256 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient) }
	{ ce.matrix : [1 x *1] (gradient)
	  ce.matrix.MinusArgs[0].r : [1 x *1] (gradient)
	  ce.matrix.MinusArgs[1] : [1 x *1]
	  err.matrix : [1 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bft : [1024 x *1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] : [1024 x 33] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ht : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._ : [1024 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient) }
	{ err.matrix.MinusArgs[1].rightMatrix : [132 x *1]
	  z.z.PlusArgs[0] : [132 x *1] }
	{ z.LSTMoutput[1].lstmState.h.Wmr : [256 x 1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._ : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.z.PlusArgs[0].y.beta._ : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bft : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.bit : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._ : [1024 x *1]
	  z.LSTMoutput[2].prevState.c : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ht : [1024 x *1] }
	{ z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bft : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] }
	{ feashift : [33 x *1]
	  z.featNorm : [33 x *1] }
	{ ce.matrix.MinusArgs[1] : [1 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState.h.htp : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 33] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ht : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result : [256 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ct : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._ : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._ : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ct : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [33 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [33 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] }
	{ err.matrix.MinusArgs[1] : [1 x *1]
	  z : [132 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result : [33 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [33 x *1] (gradient)
	  z.LSTMoutput[1].prevState.h : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.z.PlusArgs[0] : [132 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [33 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [33 x *1] (gradient)
	  z.featNorm.ElementTimesArgs[0] : [33 x *1] }
	{ z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.it._ : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._ : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].prevState.c : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._ : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ht : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result : [256 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient) }
	{ ce.matrix : [1 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 33] (gradient)
	  z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1] : [1024 x *1] (gradient) }
	{ ce.matrix.MinusArgs[0].r : [1 x *1]
	  z.LSTMoutput[1].lstmState.h.htp : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.z.PlusArgs[0].y.result : [256 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.bit : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState.h.htp : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0] : [1024 x *1] }
	{ z : [132 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].prevState.h : [256 x *1] (gradient)
	  z.LSTMoutput[3].lstmState.h.htp : [256 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot : [1024 x *1] }
	{ z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[3].prevState.h : [256 x *1] (gradient)
	  z.z.PlusArgs[0].y.result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._ : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._ : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 33] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._ : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ot._ : [1024 x *1] (gradient) }
	{ realFeatures : [363 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._ : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._ : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft : [1024 x *1] }
	{ z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] }
	{ z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta : [1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ct : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ht.ElementTimesArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._ : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.bft : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1] : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ct : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1] }
	{ z.LSTMoutput[2].lstmState._privateInnards.bft : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)
	  z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result : [1024 x *1] (gradient) }
	{ z.LSTMoutput[1].lstmState._privateInnards.ct : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ot._ : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0] : [1024 x *1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1] : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1] : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.ft._ : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.it._ : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ft._ : [1024 x *1]
	  z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient) }
	{ realFeatures.x : [363 x 1 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta : [1] (gradient)
	  z.LSTMoutput[2].lstmState._privateInnards.ht : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0] : [1024 x *1]
	  z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].result : [1024 x *1] }
	{ z.LSTMoutput[1].lstmState._privateInnards.bft : [1024 x *1] (gradient)
	  z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1] : [1024 x *1]
	  z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1] (gradient)
	  z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._ : [1] (gradient)
	  z.LSTMoutput[3].lstmState._privateInnards.ht.ElementTimesArgs[1] : [1024 x *1] }

Here are the ones that don't share memory:
	{BS.Constants.One : [1]}
	{features : [1 x 363 x *1]}
	{labels : [132 x *1]}
	{logPrior._ : [132]}
	{z.B : [132]}
	{z.featNorm.invStdDev : [33]}
	{z.featNorm.mean : [33]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] : [1024 x 33]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 33]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 33]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 33]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[1].lstmState.h.Wmr : [256 x 1024]}
	{z.LSTMoutput[1].prevState.c : [1024 x *1]}
	{z.LSTMoutput[1].prevState.h : [256 x *1]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[2].lstmState.h.Wmr : [256 x 1024]}
	{z.LSTMoutput[2].prevState.c : [1024 x *1]}
	{z.LSTMoutput[2].prevState.h : [256 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] : [1024]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._ : [1]}
	{z.LSTMoutput[3].lstmState.h.Wmr : [256 x 1024]}
	{z.LSTMoutput[3].prevState.c : [1024 x *1]}
	{z.LSTMoutput[3].prevState.h : [256 x *1]}
	{z.W : [132 x 256]}
	{z.z.PlusArgs[0].y.beta._ : [1]}
	{ce : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{ce : [1] (gradient)}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1]}
	{z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)}
	{logPrior : [132]}
	{z.z.PlusArgs[0].y.beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)}
	{z.B : [132] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0] : [1024 x 256] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1] : [1024] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)}
	{z.LSTMoutput[1].lstmState._privateInnards.ht.ElementTimesArgs[1] : [1024 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].result : [33 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)}
	{z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState.h.Wmr : [256 x 1024] (gradient)}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1] : [1024 x *1]}
	{z.W : [132 x 256] (gradient)}
	{z.LSTMoutput[1].lstmState.h.htp : [256 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].result : [256 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0] : [1024 x 256] (gradient)}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.z.PlusArgs[0].y.beta : [1] (gradient)}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].result : [33 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ct : [1024 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._ : [1] (gradient)}
	{z.LSTMoutput[1].lstmState._privateInnards.ot : [1024 x *1]}
	{z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0] : [1024] (gradient)}
	{z.LSTMoutput[1].lstmState._privateInnards.ft : [1024 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.it : [1024 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].result : [1024 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta : [1]}
	{z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta : [1]}
	{err : [1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].result : [256 x *1]}
	{z.LSTMoutput[1].lstmState._privateInnards.ht : [1024 x *1]}


08/21/2017 08:55:58: Training 6219945 parameters in 87 out of 87 parameter tensors and 269 nodes with gradient:

08/21/2017 08:55:58: 	Node 'z.B' (LearnableParameter operation) : [132]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 33]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 33]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 33]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 33]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState.h.Wmr' (LearnableParameter operation) : [256 x 1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[1].lstmState.h.htp.TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState.h.Wmr' (LearnableParameter operation) : [256 x 1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[2].lstmState.h.htp.TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.bit.ElementTimesArgs[1].z.PlusArgs[1].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ft._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.it._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[0].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[0].PlusArgs[1]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[0]' (LearnableParameter operation) : [1024 x 256]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[0].PlusArgs[1].TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[0]' (LearnableParameter operation) : [1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState._privateInnards.ot._.PlusArgs[1].ElementTimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState.h.Wmr' (LearnableParameter operation) : [256 x 1024]
08/21/2017 08:55:58: 	Node 'z.LSTMoutput[3].lstmState.h.htp.TimesArgs[1].beta._' (LearnableParameter operation) : [1]
08/21/2017 08:55:58: 	Node 'z.W' (LearnableParameter operation) : [132 x 256]
08/21/2017 08:55:58: 	Node 'z.z.PlusArgs[0].y.beta._' (LearnableParameter operation) : [1]


08/21/2017 08:55:58: Precomputing --> 3 PreCompute nodes found.

08/21/2017 08:55:58: 	z.featNorm.mean = Mean()
08/21/2017 08:55:58: 	z.featNorm.invStdDev = InvStdDev()
08/21/2017 08:55:58: 	logPrior._ = Mean()
minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

08/21/2017 08:56:02: Precomputing --> Completed.


08/21/2017 08:56:02: Starting Epoch 1: learning rate per sample = 0.00078125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses

08/21/2017 08:56:02: Starting minibatch loop.
08/21/2017 08:56:12:  Epoch[ 1 of 4]-Minibatch[   1-  10, 0.98%]: ce = 4.76651337 * 6400; err = 0.88140625 * 6400; time = 10.4461s; samplesPerSecond = 612.7
08/21/2017 08:56:20:  Epoch[ 1 of 4]-Minibatch[  11-  20, 1.95%]: ce = 4.59867950 * 6400; err = 0.88515625 * 6400; time = 7.7286s; samplesPerSecond = 828.1
08/21/2017 08:56:25:  Epoch[ 1 of 4]-Minibatch[  21-  30, 2.93%]: ce = 4.57680253 * 5494; err = 0.90899163 * 5494; time = 5.1180s; samplesPerSecond = 1073.5
08/21/2017 08:56:30:  Epoch[ 1 of 4]-Minibatch[  31-  40, 3.91%]: ce = 4.47557362 * 2062; err = 0.91949564 * 2062; time = 5.1607s; samplesPerSecond = 399.6
08/21/2017 08:56:32: Finished Epoch[ 1 of 4]: [Training] ce = 4.63036295 * 20498; err = 0.89350181 * 20498; totalSamplesSeen = 20498; learningRatePerSample = 0.00078125001; epochTime=30.5442s
08/21/2017 08:56:33: SGD: Saving checkpoint model '/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.1'

08/21/2017 08:56:33: Starting Epoch 2: learning rate per sample = 0.00078125  effective momentum = 0.900025  momentum as time constant = 6076.0 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20498), data subset 0 of 1, with 1 datapasses

08/21/2017 08:56:33: Starting minibatch loop.
08/21/2017 08:56:39:  Epoch[ 2 of 4]-Minibatch[   1-  10, 0.98%]: ce = 4.34373718 * 6400; err = 0.81421875 * 6400; time = 6.2567s; samplesPerSecond = 1022.9
08/21/2017 08:56:44:  Epoch[ 2 of 4]-Minibatch[  11-  20, 1.95%]: ce = 4.39863647 * 6400; err = 0.89078125 * 6400; time = 5.0857s; samplesPerSecond = 1258.4
08/21/2017 08:56:49:  Epoch[ 2 of 4]-Minibatch[  21-  30, 2.93%]: ce = 4.28678166 * 5626; err = 0.86260220 * 5626; time = 5.0798s; samplesPerSecond = 1107.5
08/21/2017 08:56:54:  Epoch[ 2 of 4]-Minibatch[  31-  40, 3.91%]: ce = 4.46916730 * 1816; err = 0.94438326 * 1816; time = 5.1781s; samplesPerSecond = 350.7
08/21/2017 08:57:00:  Epoch[ 2 of 4]-Minibatch[  41-  50, 4.88%]: ce = 4.74094013 * 238; err = 0.94117647 * 238; time = 5.1641s; samplesPerSecond = 46.1
08/21/2017 08:57:01: Finished Epoch[ 2 of 4]: [Training] ce = 4.36025283 * 20514; err = 0.86462903 * 20514; totalSamplesSeen = 41012; learningRatePerSample = 0.00078125001; epochTime=27.8119s
08/21/2017 08:57:01: SGD: Saving checkpoint model '/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.2'

08/21/2017 08:57:01: Starting Epoch 3: learning rate per sample = 0.00078125  effective momentum = 0.900025  momentum as time constant = 6076.0 samples
minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 41012), data subset 0 of 1, with 1 datapasses

08/21/2017 08:57:01: Starting minibatch loop.
08/21/2017 08:57:07:  Epoch[ 3 of 4]-Minibatch[   1-  10, 0.98%]: ce = 4.12664337 * 6400; err = 0.83187500 * 6400; time = 5.8355s; samplesPerSecond = 1096.7
08/21/2017 08:57:14:  Epoch[ 3 of 4]-Minibatch[  11-  20, 1.95%]: ce = 4.13185272 * 6400; err = 0.85656250 * 6400; time = 7.1096s; samplesPerSecond = 900.2
08/21/2017 08:57:20:  Epoch[ 3 of 4]-Minibatch[  21-  30, 2.93%]: ce = 4.24645121 * 5748; err = 0.90657620 * 5748; time = 5.9052s; samplesPerSecond = 973.4
08/21/2017 08:57:25:  Epoch[ 3 of 4]-Minibatch[  31-  40, 3.91%]: ce = 4.27430935 * 1828; err = 0.91630197 * 1828; time = 5.1521s; samplesPerSecond = 354.8
08/21/2017 08:57:28: Finished Epoch[ 3 of 4]: [Training] ce = 4.17554989 * 20598; err = 0.86823963 * 20598; totalSamplesSeen = 61610; learningRatePerSample = 0.00078125001; epochTime=26.6036s
08/21/2017 08:57:28: SGD: Saving checkpoint model '/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn.3'

08/21/2017 08:57:28: Starting Epoch 4: learning rate per sample = 0.00078125  effective momentum = 0.900025  momentum as time constant = 6076.0 samples
minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61610), data subset 0 of 1, with 1 datapasses

08/21/2017 08:57:28: Starting minibatch loop.
08/21/2017 08:57:36:  Epoch[ 4 of 4]-Minibatch[   1-  10, 0.98%]: ce = 4.02134735 * 6400; err = 0.82812500 * 6400; time = 7.3373s; samplesPerSecond = 872.3
08/21/2017 08:57:44:  Epoch[ 4 of 4]-Minibatch[  11-  20, 1.95%]: ce = 3.98399445 * 6400; err = 0.85078125 * 6400; time = 8.0171s; samplesPerSecond = 798.3
08/21/2017 08:57:50:  Epoch[ 4 of 4]-Minibatch[  21-  30, 2.93%]: ce = 4.29594658 * 5882; err = 0.90394424 * 5882; time = 6.3453s; samplesPerSecond = 927.0
08/21/2017 08:57:55:  Epoch[ 4 of 4]-Minibatch[  31-  40, 3.91%]: ce = 4.36383398 * 1682; err = 0.95362663 * 1682; time = 5.1897s; samplesPerSecond = 324.1
08/21/2017 08:57:56: Finished Epoch[ 4 of 4]: [Training] ce = 4.11602575 * 20376; err = 0.86700039 * 20376; totalSamplesSeen = 81986; learningRatePerSample = 0.00078125001; epochTime=27.4244s
08/21/2017 08:57:56: SGD: Saving checkpoint model '/tmp/cntk-test-20170821084342.832803/Speech/LSTM_Truncated@release_cpu/models/cntkSpeech.dnn'

08/21/2017 08:57:56: Action "train" complete.

08/21/2017 08:57:56: __COMPLETED__